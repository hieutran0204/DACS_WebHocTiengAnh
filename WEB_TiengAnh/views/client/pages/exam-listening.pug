extends ../layouts/default

block content
  .container.mt-5
    h1.text-center.mb-4 Đề thi Listening TOEIC
    if error && error.length
      .alert.alert-danger.text-center #{error}
    if !examPart
      .alert.alert-info.text-center Không có đề thi Listening nào được public.
    else
      .card.mb-4
        .card-header.bg-primary.text-white
          h2.mb-0 Đề #{examPart._id} - Part #{examPart.part.join(', ')} (Độ khó: #{difficultyMap[examPart.difficulty]})
        .card-body
          .timer.mb-3
            p Thời gian còn lại: 
              span#timer.text-primary 30:00
          form(action=`/toeic/listening/${examPart._id}/submit` method='POST')
            input(type='hidden' name='examPartId' value=examPart._id)
            each questions, partKey in questionsByPart
              h3.mt-4 #{partKey}
              each question in questions
                .question.mb-4.border.p-3.rounded
                  h5
                    | Câu #{question.questionNumber}
                    if question.subQuestionIndex !== undefined
                      |  (Q#{question.subQuestionIndex + 1})
                  if question.audioUrl
                    .mb-3
                      audio(controls class='w-100')
                        source(src=question.audioUrl type='audio/mpeg')
                        | Trình duyệt không hỗ trợ audio.
                  if question.imageUrl
                    .mb-3
                      img(src=question.imageUrl alt='Question Image' style='max-width: 300px;')
                  if question.diagramUrl
                    .mb-3
                      img(src=question.diagramUrl alt='Diagram' style='max-width: 300px;')
                  if question.transcript
                    p.mb-2
                      strong Transcript: 
                      | #{question.transcript}
                  p.mb-2
                    strong Câu hỏi: 
                    | #{question.questionText}
                  if question.options && Array.isArray(question.options)
                    each option, optIndex in question.options
                      .form-check.mb-1
                        label.form-check-label
                          input.form-check-input(
                            type='radio'
                            name=`answers[${question.questionId}-${question.subQuestionIndex || 0}]`
                            value=String.fromCharCode(65 + optIndex)
                            required
                          )
                          | #{String.fromCharCode(65 + optIndex)}. #{option}
                  else
                    p.text-warning (Không có lựa chọn đáp án)
            button.btn.btn-primary.mt-3(type='submit') Nộp bài

  script(src='https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js')
  script.
    // Timer logic
    let time = 1800; // 30 phút (1800 giây)
    const timerDisplay = document.getElementById('timer');
    const countdown = setInterval(() => {
      const minutes = Math.floor(time / 60);
      const seconds = time % 60;
      timerDisplay.textContent = `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;
      time--;
      if (time < 0) {
        clearInterval(countdown);
        timerDisplay.textContent = 'Hết giờ!';
        document.querySelector('form').submit(); // Tự động nộp bài
      }
    }, 1000);