extends ../../layouts/default

block content
  .container.mt-4
    // Hiển thị flash message
    if success && success.length
      .alert.alert-success.alert-dismissible.fade.show(role='alert')
        i.fas.fa-check-circle.me-2
        = success[0]
        button.btn-close(type='button', data-bs-dismiss='alert', aria-label='Close')

    if error && error.length
      .alert.alert-danger.alert-dismissible.fade.show(role='alert')
        i.fas.fa-exclamation-triangle.me-2
        = error[0]
        button.btn-close(type='button', data-bs-dismiss='alert', aria-label='Close')

    .d-flex.justify-content-between.align-items-center.mb-4
      h1 Thêm câu hỏi mới
      a.btn.btn-secondary(href='/admin/dashboard')
        i.fas.fa-arrow-left.me-2
        | Quay lại Dashboard

    .card
      .card-body
        form(action="/admin/questions/add" method="POST" enctype="multipart/form-data" id="questionForm")
          .row.mb-3
            .col-md-4
              label.form-label(for="MaCC") Mã Chứng Chỉ
              select.form-select(name="MaCC" required)
                option(value="") -- Chọn chứng chỉ --
                option(value="TOEIC", selected) TOEIC
                option(value="IELTS") IELTS
                option(value="TOEFL") TOEFL

            .col-md-4
              label.form-label(for="TopicN") Mã Đề
              input.form-control(type="number" name="TopicN" required min="1")

            .col-md-4
              label.form-label(for="part") Phần Thi (Part)
              select.form-select(name="part" required id="partSelect" onchange="showPartFields(this.value)")
                option(value="") -- Chọn phần --
                option(value="5") Part 5
                option(value="6") Part 6
                option(value="7") Part 7

          .row.mb-3
            .col-md-2
              label.form-label(for="questionN") Câu Hỏi Số
              input.form-control(type="number" name="questionN" required min="1" max="100")

          // Part 5
          #part5-fields.d-none
            .mb-3
              label.form-label(for="question") Câu hỏi
              textarea.form-control(name="question" rows="2" required disabled)

            .mb-3
              label.form-label Đáp Án
              .row
                each val, index in ['A', 'B', 'C', 'D']
                  .col-md-6.mb-2
                    .input-group
                      span.input-group-text #{val}
                      input.form-control(type="text" name="options[]" required disabled)

            .mb-3
              label.form-label(for="correctAnswer") Đáp án đúng
              select.form-select(name="correctAnswer" required disabled)
                option(value="") -- Chọn --
                option(value="A") A
                option(value="B") B
                option(value="C") C
                option(value="D") D

          // Part 6 + 7
          #passage-field.d-none
            .mb-3
              label.form-label(for="passage") Đoạn văn (Passage)
              textarea.form-control(name="passage" rows="5" required disabled)

          // Part 6 - Blanks
          #part6-fields.d-none
            .mb-3
              label.fw-bold Câu hỏi điền từ (Blanks)
              .blanks-container
                .card.mb-3.blank-card
                  .card-header Blank 1
                  .card-body
                    input(type="hidden" name="blanks[0][blank]" value="1" disabled)
                    each val in ['A', 'B', 'C', 'D']
                      .input-group.mb-2
                        span.input-group-text #{val}
                        input.form-control(type="text" name="blanks[0][options][]" required disabled)
                    label.form-label Chọn đáp án đúng:
                    select.form-select(name="blanks[0][correctAnswer]" required disabled)
                      option(value="") -- Chọn --
                      option(value="A") A
                      option(value="B") B
                      option(value="C") C
                      option(value="D") D
              button.btn.btn-outline-primary.mb-3.add-blank(type="button" disabled) Thêm Blank
              button.btn.btn-outline-danger.mb-3.remove-blank.d-none(type="button" disabled) Xóa Blank

          // Part 7 - Multiple questions
          #part7-fields.d-none
            .mb-3
              label.fw-bold Câu hỏi đọc hiểu
              .questions-container
                .card.mb-3.question-card
                  .card-header Câu hỏi 1
                  .card-body
                    .mb-3
                      label.form-label Nội dung câu hỏi
                      input.form-control(type="text" name="questions[0][question]" required disabled)
                    each val in ['A', 'B', 'C', 'D']
                      .input-group.mb-2
                        span.input-group-text #{val}
                        input.form-control(type="text" name="questions[0][options][]" required disabled)
                    label.form-label Đáp án đúng
                    select.form-select(name="questions[0][correctAnswer]" required disabled)
                      option(value="") -- Chọn --
                      option(value="A") A
                      option(value="B") B
                      option(value="C") C
                      option(value="D") D
              button.btn.btn-outline-primary.mb-3.add-question(type="button" disabled) Thêm Câu hỏi
              button.btn.btn-outline-danger.mb-3.remove-question.d-none(type="button" disabled) Xóa Câu hỏi

          .row.mb-3
            .col-md-6
              label.form-label(for="image") Hình ảnh (nếu có)
              input.form-control(type="file" name="image" accept="image/*")
            .col-md-6
              label.form-label(for="difficulty") Độ khó
              select.form-select(name="difficulty" required)
                option(value="") -- Chọn độ khó --
                option(value="0") Dễ
                option(value="1") Trung bình
                option(value="2") Khó

          .mb-3
            label.form-label(for="explanation") Giải thích
            textarea.form-control(name="explanation" rows="3")

          .d-grid.gap-2.d-md-flex.justify-content-md-end
            button.btn.btn-primary.me-md-2(type="submit" id="submitBtn")
              i.fas.fa-save.me-2
              | Lưu câu hỏi
            button.btn.btn-outline-secondary(type="reset")
              i.fas.fa-undo.me-2
              | Nhập lại

  script.
    function showPartFields(part) {
      const sections = ['part5-fields', 'part6-fields', 'part7-fields', 'passage-field'];
      sections.forEach(section => {
        document.getElementById(section).classList.add('d-none');
        document.querySelectorAll(`#${section} [required]`).forEach(el => el.disabled = true);
      });

      document.querySelector('.add-blank').disabled = true;
      document.querySelector('.remove-blank').disabled = true;
      document.querySelector('.add-question').disabled = true;
      document.querySelector('.remove-question').disabled = true;

      if (part === "5") {
        document.getElementById('part5-fields').classList.remove('d-none');
        document.querySelectorAll('#part5-fields [required]').forEach(el => el.disabled = false);
      } else if (part === "6") {
        document.getElementById('passage-field').classList.remove('d-none');
        document.getElementById('part6-fields').classList.remove('d-none');
        document.querySelectorAll('#passage-field [required], #part6-fields [required]').forEach(el => el.disabled = false);
        document.querySelector('.add-blank').disabled = false;
        document.querySelector('.remove-blank').disabled = false;
      } else if (part === "7") {
        document.getElementById('passage-field').classList.remove('d-none');
        document.getElementById('part7-fields').classList.remove('d-none');
        document.querySelectorAll('#passage-field [required], #part7-fields [required]').forEach(el => el.disabled = false);
        document.querySelector('.add-question').disabled = false;
        document.querySelector('.remove-question').disabled = false;
      }
    }

    // Thêm blank động
    document.querySelector('.add-blank').addEventListener('click', function() {
      const container = document.querySelector('.blanks-container');
      const blankCount = container.querySelectorAll('.blank-card').length;
      if (blankCount >= 4) {
        alert('Tối đa 4 blanks!');
        return;
      }
      const blankIndex = blankCount;
      const blankHtml = `
        <div class="card mb-3 blank-card">
          <div class="card-header">Blank ${blankIndex + 1}</div>
          <div class="card-body">
            <input type="hidden" name="blanks[${blankIndex}][blank]" value="${blankIndex + 1}">
            ${['A', 'B', 'C', 'D'].map(val => `
              <div class="input-group mb-2">
                <span class="input-group-text">${val}</span>
                <input class="form-control" type="text" name="blanks[${blankIndex}][options][]" required>
              </div>
            `).join('')}
            <label class="form-label">Chọn đáp án đúng:</label>
            <select class="form-select" name="blanks[${blankIndex}][correctAnswer]" required>
              <option value="">-- Chọn --</option>
              <option value="A">A</option>
              <option value="B">B</option>
              <option value="C">C</option>
              <option value="D">D</option>
            </select>
          </div>
        </div>
      `;
      container.insertAdjacentHTML('beforeend', blankHtml);
      document.querySelector('.remove-blank').classList.toggle('d-none', container.querySelectorAll('.blank-card').length <= 1);
    });

    // Xóa blank
    document.querySelector('.remove-blank').addEventListener('click', function() {
      const container = document.querySelector('.blanks-container');
      const blanks = container.querySelectorAll('.blank-card');
      if (blanks.length > 1) {
        container.removeChild(blanks[blanks.length - 1]);
        document.querySelector('.remove-blank').classList.toggle('d-none', container.querySelectorAll('.blank-card').length <= 1);
      }
    });

    // Thêm question động
    document.querySelector('.add-question').addEventListener('click', function() {
      const container = document.querySelector('.questions-container');
      const questionCount = container.querySelectorAll('.question-card').length;
      if (questionCount >= 4) {
        alert('Tối đa 4 câu hỏi!');
        return;
      }
      const qIndex = questionCount;
      const questionHtml = `
        <div class="card mb-3 question-card">
          <div class="card-header">Câu hỏi ${qIndex + 1}</div>
          <div class="card-body">
            <div class="mb-3">
              <label class="form-label">Nội dung câu hỏi</label>
              <input class="form-control" type="text" name="questions[${qIndex}][question]" required>
            </div>
            ${['A', 'B', 'C', 'D'].map(val => `
              <div class="input-group mb-2">
                <span class="input-group-text">${val}</span>
                <input class="form-control" type="text" name="questions[${qIndex}][options][]" required>
              </div>
            `).join('')}
            <label class="form-label">Đáp án đúng</label>
            <select class="form-select" name="questions[${qIndex}][correctAnswer]" required>
              <option value="">-- Chọn --</option>
              <option value="A">A</option>
              <option value="B">B</option>
              <option value="C">C</option>
              <option value="D">D</option>
            </select>
          </div>
        </div>
      `;
      container.insertAdjacentHTML('beforeend', questionHtml);
      document.querySelector('.remove-question').classList.toggle('d-none', container.querySelectorAll('.question-card').length <= 1);
    });

    // Xóa question
    document.querySelector('.remove-question').addEventListener('click', function() {
      const container = document.querySelector('.questions-container');
      const questions = container.querySelectorAll('.question-card');
      if (questions.length > 1) {
        container.removeChild(questions[questions.length - 1]);
        document.querySelector('.remove-question').classList.toggle('d-none', container.querySelectorAll('.question-card').length <= 1);
      }
    });

    // Xử lý submit form
    document.getElementById('questionForm').addEventListener('submit', function(e) {
      const part = document.getElementById('partSelect').value;
      let isValid = true;
      let errorMessage = '';

      if (!part) {
        errorMessage = 'Vui lòng chọn phần thi (Part)';
        isValid = false;
      } else {
        if (part === "5") {
          const question = document.querySelector('#part5-fields [name="question"]');
          const options = document.querySelectorAll('#part5-fields [name="options[]"]');
          const correctAnswer = document.querySelector('#part5-fields [name="correctAnswer"]');
          
          if (!question.value.trim()) {
            errorMessage = 'Vui lòng nhập nội dung câu hỏi';
            isValid = false;
          } else if (options.length !== 4 || Array.from(options).some(opt => !opt.value.trim())) {
            errorMessage = 'Vui lòng nhập đúng 4 đáp án';
            isValid = false;
          } else if (!correctAnswer.value) {
            errorMessage = 'Vui lòng chọn đáp án đúng';
            isValid = false;
          }
        } else if (part === "6") {
          const passage = document.querySelector('#passage-field [name="passage"]');
          const blanks = document.querySelectorAll('#part6-fields .blank-card');
          
          if (!passage.value.trim()) {
            errorMessage = 'Vui lòng nhập đoạn văn (passage)';
            isValid = false;
          } else if (blanks.length === 0) {
            errorMessage = 'Vui lòng thêm ít nhất một blank';
            isValid = false;
          } else {
            blanks.forEach((blank, i) => {
              const blankOptions = blank.querySelectorAll('[name$="[options][]"]');
              const blankCorrectAnswer = blank.querySelector('[name$="[correctAnswer]"]');
              
              if (blankOptions.length !== 4 || Array.from(blankOptions).some(opt => !opt.value.trim())) {
                errorMessage = `Vui lòng nhập đúng 4 đáp án cho Blank ${i+1}`;
                isValid = false;
              } else if (!blankCorrectAnswer.value) {
                errorMessage = `Vui lòng chọn đáp án đúng cho Blank ${i+1}`;
                isValid = false;
              }
            });
          }
        } else if (part === "7") {
          const passage = document.querySelector('#passage-field [name="passage"]');
          const questions = document.querySelectorAll('#part7-fields .question-card');
          
          if (!passage.value.trim()) {
            errorMessage = 'Vui lòng nhập đoạn văn (passage)';
            isValid = false;
          } else if (questions.length === 0) {
            errorMessage = 'Vui lòng thêm ít nhất một câu hỏi';
            isValid = false;
          } else {
            questions.forEach((question, i) => {
              const questionText = question.querySelector('[name$="[question]"]');
              const questionOptions = question.querySelectorAll('[name$="[options][]"]');
              const questionCorrectAnswer = question.querySelector('[name$="[correctAnswer]"]');
              
              if (!questionText.value.trim()) {
                errorMessage = `Vui lòng nhập nội dung câu hỏi ${i+1}`;
                isValid = false;
              } else if (questionOptions.length !== 4 || Array.from(questionOptions).some(opt => !opt.value.trim())) {
                errorMessage = `Vui lòng nhập đúng 4 đáp án cho câu hỏi ${i+1}`;
                isValid = false;
              } else if (!questionCorrectAnswer.value) {
                errorMessage = `Vui lòng chọn đáp án đúng cho câu hỏi ${i+1}`;
                isValid = false;
              }
            });
          }
        }

        const difficulty = document.querySelector('[name="difficulty"]').value;
        if (!['0', '1', '2'].includes(difficulty)) {
          errorMessage = 'Vui lòng chọn độ khó';
          isValid = false;
        }
      }

      if (!isValid) {
        e.preventDefault();
        alert(errorMessage);
        if (part) {
          document.getElementById(`part${part}-fields`).scrollIntoView({ behavior: 'smooth' });
        } else {
          document.getElementById('partSelect').scrollIntoView({ behavior: 'smooth' });
        }
      }
    });

    // Tự động gọi showPartFields nếu đã có giá trị part
    document.addEventListener('DOMContentLoaded', function() {
      const partSelect = document.getElementById('partSelect');
      if (partSelect.value) {
        showPartFields(partSelect.value);
      }
    });