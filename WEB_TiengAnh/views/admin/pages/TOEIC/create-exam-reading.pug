html
  head
    title Tạo đề thi Reading TOEIC
    link(rel="stylesheet", href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css")
    script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js")
  body
    .container.mt-5
      h1.mb-4 Tạo đề thi Reading TOEIC

      if success
        .alert.alert-success #{success}
      if error
        .alert.alert-danger #{error}

      form(method="POST", action="/admin/TOEIC/exam-reading/create")
        .mb-3
          label.form-label(for="parts") Chọn Part:
          select#parts.form-select(name="parts", multiple, required)
            option(value="5") Part 5
            option(value="6") Part 6
            option(value="7") Part 7

        .mb-3
          label.form-label(for="questionIds") Chọn câu hỏi:
          .list-group
            if questions && questions.length
              each question in questions
                .list-group-item
                  .form-check
                    input.form-check-input(type="checkbox", name="questionIds", value=question._id)
                    label.form-check-label
                      | Part #{question.part} - Câu #{question.questionN || 'N/A'}: 
                      | #{question.question ? question.question.substring(0, 50) + '...' : 'Không có nội dung'}
            else
              .list-group-item Không có câu hỏi nào

        button.btn.btn-primary(type="submit") Tạo đề thi
        a.btn.btn-secondary.ms-2(href="/admin/TOEIC/exam-reading") Quay lại

    script.
      document.addEventListener('DOMContentLoaded', () => {
        const partSelect = document.getElementById('parts');
        const questionItems = document.querySelectorAll('.list-group-item');

        partSelect.addEventListener('change', () => {
          const selectedParts = Array.from(partSelect.selectedOptions)
            .map(option => parseInt(option.value));

          questionItems.forEach(item => {
            const questionPart = parseInt(item.querySelector('label').textContent.match(/Part (\d+)/)[1]);
            if (selectedParts.length === 0 || selectedParts.includes(questionPart)) {
              item.style.display = 'block';
            } else {
              item.style.display = 'none';
            }
          });
        });

        // Kích hoạt lần đầu để lọc nếu có part đã chọn
        partSelect.dispatchEvent(new Event('change'));
      });